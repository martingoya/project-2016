@model Model.Models.EventView

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var htmlAttributesImage = new Dictionary<string, object>
    {
        { "class" , "form-control" }
    };

    var htmlAttributesVideoLink = new Dictionary<string, object>
    {
        { "class" , "form-control" }
    };

    if (Model.IsImage)
    {
        htmlAttributesVideoLink.Add("disabled", "disabled");
    }
    else
    {
        htmlAttributesImage.Add("disabled", "disabled");
    }
}

<h2>Create</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeEventID, "TypeEventID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeEventID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeEventID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = htmlAttributesImage })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VideoLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoLink, new { htmlAttributes = htmlAttributesVideoLink })
                @Html.ValidationMessageFor(model => model.VideoLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsImage)
                    @Html.ValidationMessageFor(model => model.IsImage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="services">Servicios:</label>
            <div class="col-md-10">
                @Html.DropDownList("ServiceID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
                <input type="submit" class="btn btn-success" name="addService" value="Agregar Servicio" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="services">Imágenes:</label>
            <div class="col-md-10">
                <input type="file" multiple="multiple" name="Files" id="Files" accept="image/*" />
            </div>
        </div>

        <div class="form-group">
            <table class="table table-striped table-inverse" style="margin-top:20px">
                <thead>
                    <tr>
                        <th scope="row" class="text-center">
                            Servicio
                        </th>
                        <th scope="row" class="text-center">
                            Nombre
                        </th>
                        <th scope="row" class="text-center"></th>
                    </tr>
                </thead>
                <tbody>
                    @if ((Session["ListService"] != null) && ((List<Model.Models.ServiceView>)Session["ListService"]).Count != 0)
                {
                    int contador = 0;
                    foreach (var item in ((List<Model.Models.ServiceView>)Session["ListService"]))
                    {
                            <tr>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.TypeService)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    <input type="submit" class="btn btn-danger" name="deleteService @contador" value="Borrar" />
                                </td>
                                @{
                                    contador++;
                                }
                            </tr>
                                        }
                                    }
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" name ="createEvent" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
